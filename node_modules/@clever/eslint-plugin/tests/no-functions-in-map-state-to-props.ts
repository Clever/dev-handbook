import { TSESLint } from "@typescript-eslint/experimental-utils";

import rule from "../lib/rules/no-functions-in-map-state-to-props";

const ruleTester = new TSESLint.RuleTester({
  parserOptions: {
    sourceType: "module",
  },
  parser: require.resolve("@typescript-eslint/parser"),
});

ruleTester.run("no-functions-in-map-state-to-props", rule, {
  valid: [
    /* The following tests are for mapStateToProps functions of the form:
      function mapStateToProps(state) {
        return {
          key: val,
        };
      }
    */
    `
    function mapStateToProps() {
      return {};
    }
    `,
    `
    function mapStateToProps(state) {
      return {};
    }
    `,
    `
    function mapStateToProps(state, ownProps) {
      return {};
    }
    `,
    `
    function mapStateToProps(state) {
      return {
        key: "stringValue",
      };
    }
    `,
    `
    function mapStateToProps(state) {
      const namedStringValue = "stringValue";
      return {
        key: namedStringValue,
      };
    }
    `,
    `
    function mapStateToProps(state) {
      return {
        numericValue: 0,
      };
    }
    `,
    `
    function mapStateToProps(state) {
      const objWithArrowFn = { key: () => null };
      return {
        numericValue: 0,
      };
    }
    `,
    `
    function mapStateToProps(state) {
      function nested() {
        return { x: () => null }
      }
      return {
        key: "okay",
      }
    }
    `,
    /* The following tests are for mapStateToProps functions of the form:
      const mapStateToProps = (state) => ({});
    */
    `
    const mapStateToProps = (state) => ({});
    `,
    `
    const mapStateToProps = (state) => ({
      key: "stringValue",
    });
    `,
    `
    const mapStateToProps = (state) => ({
      numericValue: 1,
    });
    `,
    /* The following tests are for mapStateToProps functions of the form:
      const mapStateToProps = (state) => {
        return {};
      };
    */
    `
    const mapStateToProps = (state) => {
      return {};
    };
    `,
    `
    const mapStateToProps = (state) => {
      return {
        key: "stringValue",
      }
    };
    `,
    `
    const mapStateToProps = (state) => {
      const namedStringValue = "stringValue";
      return {
        key: namedStringValue,
      };
    };
    `,
    `
    const mapStateToProps = (state) => {
      return {
        numericValue: 0,
      };
    };
    `,
    `
    const mapStateToProps = (state) => {
      const objWithArrowFn = { key: () => null };
      return {
        numericValue: 0,
      };
    };
    `,
  ],
  invalid: [
    {
      code: `
      function mapStateToProps(state) {
        return {
          key: () => {},
        };
      }
      `,
      errors: [{ messageId: "noFunctionInMapStateToProps" }],
    },
    {
      code: `
      function mapStateToProps(state) {
        return {
          stringProperty: "stringVal",
          key: () => {},
          numericProperty: 123,
        };
      }
      `,
      errors: [{ messageId: "noFunctionInMapStateToProps" }],
    },
    {
      code: `
      const mapStateToProps = (state) => ({
        key: () => {},
      });
      `,
      errors: [{ messageId: "noFunctionInMapStateToProps" }],
    },
    {
      code: `
      const mapStateToProps = (state) => {
        return {
          key: () => {},
        };
      }
      `,
      errors: [{ messageId: "noFunctionInMapStateToProps" }],
    },
  ],
});
